[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "I am a PhD student at Imperial College London & 2023 Enrichment student at the Alan Turing Institute. I have a background in Chemical Engineering and still enjoy teaching labs at Imperial College. My interests include Bayesian optimisation, human-in-the-loop machine learning, cricket üèè, and darts üéØ.\n\nEducation\n\nImperial College London\n\nPhD in Process Systems Engineering | 2021 - Current\n\n\n\nUniversity of Cambridge\n\nMPhil in Chemical Engineering & Biotechnology | 2020 - 2021\n\n\n\nUniversity of Manchester\n\nBEng in Chemical Engineering | 2017 - 2020"
  },
  {
    "objectID": "posts/thatcher_review/index.html",
    "href": "posts/thatcher_review/index.html",
    "title": "Book Review - Killing Thatcher",
    "section": "",
    "text": "Killing Thatcher - Rory Carroll\nMaggie‚Äôs potential assassin, ironically named Magee is presented as someone who can‚Äôt catch a break. He has a troubled relationship with his wife, is arrested countless times, and it goes without saying, didn‚Äôt kill Thatcher.\nCarroll‚Äôs detailed account of his whereabouts in England are interspersed with Magee‚Äôs own reflections later on in life, which are characteristically dry: ‚Äúmy life was too chaotic‚Äù. Carroll does well to chip away and reveal a portrait of a man who presented himself deliberately dull enough that no one seems to remember what he looks like (useful if you have attempted to assassinate a sitting prime minister). The bleak reality of being an anonymous IRA operative in England is contrasted with the historical implications of the task at hand. Guy Faulks planted a bomb under the Houses of Parliament that didn‚Äôt even go off, and people burn an effigy of him every year. The events of the book seem surreal to those born after the troubles; ‚Äúone of the great what ifs‚Äù that Thatcher herself rarely chose to comprehend.\nCarroll dwells on the turning points of the era, such as the death of Bobby Sands and the rise of Gerry Adams‚Äô Armalite / Ballot Box strategy, providing the relevant context for someone unfamiliar with the period. However, by focussing largely on the ‚ÄòEngland Department‚Äô and specifically a single operation, these public-facing protagonists are side-lined in favour of a different type of history. One that is populated with normal people: students, office workers and landlords. These accounts provide important insight into the human cost of the troubles on both sides. Light relief comes somewhat unsurprisingly not from the members of the IRA (and Gerry Adams), but from the British detectives charged with locating Magee. The tangle of regional agencies searching for Magee as he drifts throughout the UK, whose jurisdiction changes every other page, results in a thrilling chase of comically bureaucratic proportions.\nMaybe it‚Äôs too soon for a screen adaptation of these events, Carroll has been sensitive with his accounts and sources (with obvious reason), and wounds are still fresh, particularly those of Thatcher‚Äôs then ‚Äúloyal enforcer‚Äù Norman Tebbit whose wife was paralysed by the attempt. However, the book is an account of a major event in modern British history that is genuinely hard to put down. Following the success of The Crown with its relentless march from the past to the present, and the Happy Valley genre of regional crime drama, Killing Thatcher has all the hallmarks of a hit series. Regardless of how people judge the event, Carroll has provided a valuable account, to remember."
  },
  {
    "objectID": "posts/plotting_practice/index.html",
    "href": "posts/plotting_practice/index.html",
    "title": "Best Practices",
    "section": "",
    "text": "‚ÄúThe First Bite Is With The Eyes.‚Äù - Apicius, 1st Century Rome\n\nHere I will outline my personal preferences for best plotting practices. I will most likely update this as and when I make design choices across research.\n\n\n\n\n\n\nAlways use the LaTeX extension to render figures by including plt.rcParams['text.usetex'] = True' at the top of your script.\n\n\n\nTo begin with we‚Äôll simulate some convergence data where we have 4 different benchmarks, each containing 16 separate repeat runs. Let‚Äôs start by plotting this data in just about the worst way, and slowly improve on this.\n\nplt.figure()\nplt.title('This is a bad plot',fontsize=20)\ncols = ['r','b','g','k']\nfor b in range(benchmarks):\n    for i in range(runs):\n        plt.plot(iterations,data[b,i,:],color=cols[b])\nplt.show()\n\n\n\n\nNow we will initialise our plot correctly using the object-oriented syntax which leads us to our first design rules:\n\n\n\n\n\n\nAlways initialise a plot using the object-oriented interface fig,ax = plt.subplots...\n\n\n\n\n\n\n\n\n\nNever initialise a plot using the pyplot interface plt.figure...\n\n\n\nWe must also select a figure size appropriate for our need. This will be the size of the final overall figure. We can adjust the fontsize of the tick values and labels later, but I would reccommend adjusting the size of the plot now to ensure that the text is legible. I am going to pretend that this figure span my text, but don‚Äôt want it to take up too much vertical space. I also want the ticks to be legible, so I will set the figure to be 7 by 3. Upon initialisation I will ensure the layout is constrained.\n\nfig,ax = plt.subplots(1,1,figsize=(7,3),layout=\"constrained\")\n\n\n\n\nFor the sake of completeness I will include this as a rule.\n\n\n\n\n\n\nAlways adjust the figure size appropriately, ensuring it is the right dimensions for the context.\n\n\n\nNow we will draw our attention to plotting the data itself. It is important to think about what message you want to convey to the reader. Clearly providing each run for each benchmark is not useful. I will plot the mean and standard deviation of regret across each benchmark.\n\nfig,ax = plt.subplots(1,1,figsize=(7,3))\nfor b in range(benchmarks):\n    mean = np.mean(data[b,:,:],axis=0)\n    std = np.std(data[b,:,:],axis=0)\n    ax.plot(iterations,mean,color=cols[b])\n    ax.fill_between(iterations,mean-std,mean+std,alpha=0.2,color=cols[b])\nplt.show()\n\n\n\n\nNow we have decided what specifically to plot and all the information we wish to present is here we can work on making the plot more interpretable.\n\n\n\n\n\n\nAlways separate your data generation and plotting code. This will make it easier to adjust the plot later. Save data at generation (for example during optimisation) and then load it in for plotting.\n\n\n\n\n\nText(0, 0.5, 'Regret, $r_\\\\tau$')\n\n\n\n\n\nWe should first add some axis labels as follows. Ensure the font size is large enough to be legible. You can use LaTeX within labels by using $ $ as standard, when doing so include an r in front of the string to ensure it gets parsed appropriately.\n\n\n\n\n\n\nAlways choose a legible font size and text for axis labels, using LaTeX where appropriate.\n\n\n\n\nax.set_xlabel(r'Iteration, $\\tau$',fontsize=18)\nax.set_ylabel(r'Regret, $r_\\tau$',fontsize=18)\nplt.show()\n\nNow we will focus on the ticks. Ticks are important because they enable the reader to interpret the values of the data. It is important to consider what tick values are appropriate to display. For example in this case, I want to convey to the reader the differences in overall convergence characteristics between these methods. Therefore, it may not be necessary to display intermediate values. Likewise, I may wish to display more intermediate values for iterations.\n\n\n\n\n\n\n\n\n\n\n\nAlways select appropriate tick values for your context, adjusting the fontsize as necessary.\n\n\n\n\nx_ticks = [0,10,20,30,40,50,60,70,80,90,100]\ny_ticks = [0,0.5,1]\nax.set_xticks(x_ticks,x_ticks,fontsize = 18)\nax.set_yticks(y_ticks,y_ticks,fontsize = 18)\n\nNow we are happy with the externals, we will focus back on the data itself. It is important to provide a legend to ensure the reader can interpret the data. Not everything has to have a label. In this case I want to convey which color corresponds to which benchmark, but I also need to convey what the error bars mean. In order not to distract from the plot, I will choose to omit this from the plot itself and instead include it in the caption. Including a label for the error bars does not contribute to the story and the message of the plot.\n\n\n\n\n\n\n\n\n\n\n\nAlways include labels for the relevant information, such as distinguishing between benchmarks. If the plot is too crowded place the legend outside of the plot.\n\n\n\n\n\n\n\n\n\nNever overwhelm the reader with information and labels. Some information is fine to include within the caption, as the caption and the image are considered complimentary and dependent.\n\n\n\n\nlabels = [f'Benchmark {b}' for b in range(1,benchmarks+1)]\nfor b in range(benchmarks):\n    mean = np.mean(data[b,:,:],axis=0)\n    std = np.std(data[b,:,:],axis=0)\n    ax.plot(iterations,mean,color=cols[b],label=labels[b])\n    ax.fill_between(iterations,mean-std,mean+std,alpha=0.2,color=cols[b])\n  \nax.legend(frameon=False,fontsize=14)\n\nYou will notice that I have chosen not to include the frame on the caption. This makes the plot look cleaner and less cluttered.\n\n\n\n\n\n\nAlways use the frameon=False option for legends.\n\n\n\nNow I‚Äôll outline a few important bits before moving onto the final adjustments. Firstly, when using fill_between a faint outline is drawn which can make the plot look cluttered, I always like to remove this by setting linewidth=0. Secondly, I always use and reccomend the tab: set of colours in matplotlib. Here is a list of examples that you can copy and paste.\n\ncols = ['tab:blue','tab:orange','tab:green','tab:red','tab:purple','tab:brown','tab:pink','tab:gray','tab:olive','tab:cyan']\n\nThese colours are softer than the default colours and are more aesthetically pleasing. Let‚Äôs make these changes.\n\n\n\n\n\n\n\n\n\n\n\nAlways use the tab: set of colours and remove the linewidth of fill_between.\n\n\n\n\ncols = ['tab:blue','tab:orange','tab:green','tab:red','tab:purple','tab:brown','tab:pink','tab:gray','tab:olive','tab:cyan']\nfor b in range(benchmarks):\n    mean = np.mean(data[b,:,:],axis=0)\n    std = np.std(data[b,:,:],axis=0)\n    ax.plot(iterations,mean,color=cols[b],label=labels[b])\n    ax.fill_between(iterations,mean-std,mean+std,alpha=0.2,color=cols[b],linewidth=0)\n\nWe are now almost there. I now reccomend adjusting the axis limits to ensure that your data is placed appropriately. In this case, the regret values are fine but the iterations should start exactly at 0 and end at 100.\n\n\n\n\n\n\n\n\n\n\n\nAlways adjust the axis limits appropriately. The x-axis particularly may be too large.\n\n\n\n\nax.set_xlim([0,100])\n\nFinally, it is important to consider whether a grid is appropriate. In this case I will for demonstration, but it may be distracting. I will adjust the transparency to make it less pronounced.\n\n\n\n\n\n\n\n\n\n\n\nAlways consider using ax.grid() if the individual values of the data are important.\n\n\n\n\nax.grid(alpha=0.4)\n\nThat is just about it for this plot. Always to remember to save figures as .svg or .pdf. If you require a .png then use the dpi= option in fig.savefig to increase the resolution.\n\n\n\n\n\n\n\n\n\n\n\nAlways save your figure as .svg or .pdf.\n\n\n\n\n\n\nFinal SVG figure\n\n\nFinally finally, READ THE DOCUMENTATION."
  },
  {
    "objectID": "posts/gazza_agonistes/index.html",
    "href": "posts/gazza_agonistes/index.html",
    "title": "Book Review - Gazza Agonistes",
    "section": "",
    "text": "Gazza Agonistes - Ian Hamilton\nThere is no discernible anniversary associated to this review of Gazza Agonistes. The book was first published 29 years ago and describes the events surrounding the life of footballer Paul Gascoigne throughout the 1990s. The author, literary critic and poet Ian Hamilton passed away in 2001. However, his depiction of the rise and fall of a talented man is timeless and universal. Hamilton writes from the perspective of a lifelong fan, willing Gazza up the field from behind the pen, a ‚Äòself-styled Gazzamane‚Äô. He celebrates the highs with literary flourish, and reports on the lows with all the authority of a disapproving parent.\nI was first made aware of Gazza Agonistes via a series of recent tweets showing footballers gracing the covers of the London Review of Books throughout the 1980s, with titles such as ‚ÄòSocial democracy, Sociology, Soccer‚Äô. Karl Miller, the editor at the time pioneered as the Guardian put in his obituary, ‚Äòa distinguished style of soccer journalism‚Äô. Gazza Agonistes is perfectly placed within this subgenre and seems so far away from the current state of football critique, consisting largely of Mark Goldbridge looking sad.\nWriting in 1994 (with a 1998 afterword written after Gazza‚Äôs exclusion from the World Cup squad that year), Hamilton describes being attracted to Gazza‚Äôs ‚Äúlegendary scampers‚Äù whilst at he played for his childhood club Newcastle, later moving to Tottenham, Hamilton‚Äôs childhood club. This transaction of loyalties, from one man‚Äôs sporting allegiances to another, provides Hamilton with the emotional license to report on Gazza in a way that is distinct from the tabloid journalists that plague the footballer‚Äôs career.\nGazza Agonistes highlights just how much the culture of football has changed throughout the last 20 years. Players were expected to take accountability for their own actions; justifications for drunken nights were laundered by the tabloids and aired out to dry in the court of public opinion. The concept of the beautiful game seemed much more tangible when those involved talked and behaved just like those watching in the stands. Gazza would go to the pub with his mates like us, end up in fights like us, and famously shed a tear like us. There is an argument against this level of scrutiny. It destroyed Paul Gascoigne; why should people earning a living have to answer for their actions outside of their work?\nFor better or for worse, player engagements on social media and with journalists are now heavily vetted. Clubs don‚Äôt want to risk anything that could undermine their own image, and in turn their net worth. Owners are looking to sell at reputational highs, whilst fans want owners to leave when their clubs are at their lowest. Who knows what Hamilton would think of the players who are expected to answer for nation-states, and how the Gazza of then would respond to allegations of sports-washing.\nGazza Agonistes is a reminder of a simpler, more passionate footballing time; best enjoyed whilst listening to the soundtrack of the 1990 Italian World Cup Nessun Dorma. For all of Gazza‚Äôs mistakes, and the treatment he endured, his epic struggles will not be repeated any time soon, and neither will an account as poetic as Hamilton‚Äôs."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Tom Savage - Blog",
    "section": "",
    "text": "Book Review - Gazza Agonistes\n\n\nPublished in The Felix October 2023\n\n\n\n\nbook review\n\n\n\n\n\n\n\n\n\n\n\nTom Savage\n\n\n\n\n\n\n  \n\n\n\n\nBook Review - Killing Thatcher\n\n\nPublished in The Felix October 2023\n\n\n\n\nbook review\n\n\n\n\n\n\n\n\n\n\n\nTom Savage\n\n\n\n\n\n\n  \n\n\n\n\nBest Practices\n\n\nVisualisations & Plots\n\n\n\n\nvisualisation\n\n\n\n\n\n\n\n\n\n\n\nOct 23, 2023\n\n\nTom Savage\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/plotting_practice/index.html#the-first-bite-is-with-the-eyes.---apicius-1st-century-rome",
    "href": "posts/plotting_practice/index.html#the-first-bite-is-with-the-eyes.---apicius-1st-century-rome",
    "title": "Best Practices",
    "section": "",
    "text": "Here I will outline my personal preferences for best plotting practices. I will most likely update this as and when I make design choices across research.\n\n\n\n\n\n\nAlways use the LaTeX extension to render figures by including plt.rcParams['text.usetex'] = True' at the top of your script.\n\n\n\nTo begin with we‚Äôll simulate some convergence data where we have 4 different benchmarks, each containing 16 separate repeat runs. Let‚Äôs start by plotting this data in just about the worst way, and slowly improve on this.\n\nplt.figure()\nplt.title('This is a bad plot',fontsize=20)\ncols = ['r','b','g','k']\nfor b in range(benchmarks):\n    for i in range(runs):\n        plt.plot(iterations,data[b,i,:],color=cols[b])\nplt.show()\n\n\n\n\nNow we will initialise our plot correctly using the object-oriented syntax which leads us to our first design rules:\n\n\n\n\n\n\nAlways initialise a plot using the object-oriented interface fig,ax = plt.subplots...\n\n\n\n\n\n\n\n\n\nNever initialise a plot using the pyplot interface plt.figure...\n\n\n\nWe must also select a figure size appropriate for our need. This will be the size of the final overall figure. We can adjust the fontsize of the tick values and labels later, but I would reccommend adjusting the size of the plot now to ensure that the text is legible. I am going to pretend that this figure span my text, but don‚Äôt want it to take up too much vertical space. I also want the ticks to be legible, so I will set the figure to be 8 by 3.\n\nfig,ax = plt.subplots(1,1,figsize=(8,3))\n\n\n\n\nFor the sake of completeness I will include this as a rule.\n\n\n\n\n\n\nAlways adjust the figure size appropriately, ensuring it is the right dimensions for the context.\n\n\n\nNow we will draw our attention to plotting the data itself. It is important to think about what message you want to convey to the reader. Clearly providing each run for each benchmark is not useful. I will plot the mean and standard deviation of regret across each benchmark.\n\nfig,ax = plt.subplots(1,1,figsize=(8,3))\nfor b in range(benchmarks):\n    mean = np.mean(data[b,:,:],axis=0)\n    std = np.std(data[b,:,:],axis=0)\n    ax.plot(iterations,mean,color=cols[b])\n    ax.fill_between(iterations,mean-std,mean+std,alpha=0.2,color=cols[b])\nplt.show()\n\n\n\n\nNow we have decided what specifically to plot and all the information we wish to present is here we can work on making the plot more interpretable.\n\n\n\n\n\n\nAlways separate your data generation and plotting code. This will make it easier to adjust the plot later. Save data at generation (for example during optimisation) and then load it in for plotting.\n\n\n\n\n\nText(0, 0.5, 'Regret, $r_\\\\tau$')\n\n\n\n\n\nWe should first add some axis labels as follows. Ensure the font size is large enough to be legible. You can use LaTeX within labels by using $ $ as standard, when doing so include an r in front of the string to ensure it gets parsed appropriately.\n\nax.set_xlabel(r'Iteration, $\\tau$',fontsize=18)\nax.set_ylabel(r'Regret, $r_\\tau$',fontsize=18)\nplt.show()"
  }
]